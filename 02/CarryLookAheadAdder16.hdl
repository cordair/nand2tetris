
CHIP CarryLookAheadAdder16 {
	IN a[16], b[16];
    OUT out[16];

	PARTS:

	/**
    * calculating P 0-15, G 0-15, PG 0-3, GG 0-3.
    */
    GeneratingVariables(a=a[0..3],   b=b[0..3], 
    P00=P0, P01=P1, P02=P2, P03=P3,
    G00=G0, G01=G1, G02=G2, G03=G3,
    GG=GG0, 
    PG=PG0);

    GeneratingVariables(a=a[4..7],   b=b[4..7],     
    P00=P4, P01=P5, P02=P6, P03=P7,
    G00=G4, G01=G5, G02=G6, G03=G7,
    GG=GG1, 
    PG=PG1);

    GeneratingVariables(a=a[8..11],  b=b[8..11],    
    P00=P8, P01=P9, P02=P10, P03=P11,
    G00=G8, G01=G9, G02=G10, G03=G11,
    GG=GG2, 
    PG=PG2);

    GeneratingVariables(a=a[12..15],  b=b[12..15],  
    P00=P12, P01=P13, P02=P14, P03=P15,
    G00=G12, G01=G13, G02=G14, G03=G15,
    GG=GG3, 
    PG=PG3);

    /**
     * calculating all carries. 
     */
    CalculatingCarries(P0=PG0, P1=PG1, P2=PG2, 
    G0=GG0, G1=GG1, G2=GG2,
    c=false, C1=C4, C2=C8, C3=C12);

    CalculatingCarries(P0=P0, P1=P1, P2=P2, 
    G0=G0, G1=G1, G2=G2, 
    c=false, C1=C1, C2=C2, C3=C3);

    CalculatingCarries(P0=P4, P1=P5, P2=P6, 
    G0=G4, G1=G5, G2=G6,
    c=C4, C1=C5, C2=C6, C3=C7);

    CalculatingCarries(P0=P8, P1=P9, P2=P10, 
    G0=G8, G1=G9, G2=G10, 
    c=C8, C1=C9, C2=C10, C3=C11);

    CalculatingCarries(P0=P12, P1=P13, P2=P14, 
    G0=G12, G1=G13, G2=G14, 
    c=C12, C1=C13, C2=C14, C3=C15);


    /**
     * sums = P xor C.
     */
    Xor(a=P0,  b=false,  out=out[0]);
    Xor(a=P1,  b=C1,  out=out[1]);
    Xor(a=P2,  b=C2,  out=out[2]);
    Xor(a=P3,  b=C3,  out=out[3]);
    Xor(a=P4,  b=C4,  out=out[4]);
    Xor(a=P5,  b=C5,  out=out[5]);
    Xor(a=P6,  b=C6,  out=out[6]);
    Xor(a=P7,  b=C7,  out=out[7]);
    Xor(a=P8,  b=C8,  out=out[8]);
    Xor(a=P9,  b=C9,  out=out[9]);
    Xor(a=P10, b=C10, out=out[10]);
    Xor(a=P11, b=C11, out=out[11]);
    Xor(a=P12, b=C12, out=out[12]);
    Xor(a=P13, b=C13, out=out[13]);
    Xor(a=P14, b=C14, out=out[14]);
    Xor(a=P15, b=C15, out=out[15]);
}