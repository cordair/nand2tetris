class Piece {
    field Array body;
    field Array skirt;
    field Piece next;
    static Array pieces;

    field int width;
    field int height;

	static int STICK;
	static int L1;
	static int L2;
	static int S1;
	static int S2;
	static int SQUARE;
	static int PYRAMID;

    constructor Piece new(Point p0, Point p1, Point p2, Point p3) {
        let STICK = 0;
        let L1 = 1;
        let L2 = 2;
        let S1 = 3;
        let S2 = 4;
        let SQUARE = 5;
        let PYRAMID = 6;

        let body = Array.new(4);
        let body[0] = p0;
        let body[1] = p1;
        let body[2] = p2;
        let body[3] = p3;
        do initWidthHeight();
        let skirt = Array.new(width);
        do initSkirt();

        return this;
    }

    method void dispose() {
        do Array.dispose(body);
        do Array.dispose(skirt);
        do Memory.deAlloc(this);
        return;
    }

    method Piece calculatePieceRotation() {
        var int rotatedX;
        var int rotatedY;
        var Point body0;
        var Point body1;
        var Point body2;
        var Point body3;

        var Point p0;
        var Point p1;
        var Point p2;
        var Point p3;

        let body0 = body[0];
        let body1 = body[1];
        let body2 = body[2];
        let body3 = body[3];

        let rotatedX = height - 1 - body0.getY();
        let rotatedY = body0.getX(); 
        let p0 = Point.new(rotatedX, rotatedY);

        let rotatedX = height - 1 - body1.getY();
        let rotatedY = body1.getX(); 
        let p1 = Point.new(rotatedX, rotatedY);

        let rotatedX = height - 1 - body2.getY();
        let rotatedY = body2.getX(); 
        let p2 = Point.new(rotatedX, rotatedY);

        let rotatedX = height - 1 - body3.getY();
        let rotatedY = body3.getX(); 
        let p3 = Point.new(rotatedX, rotatedY);

        return Piece.new(p0, p1, p2, p3);
    }

    method boolean equals(Piece otherPiece) {
        var int i;
        var int j;
        var int count;
        var Array otherBody;
        var Point otherPoint;
        var Point currentPoint;

        let otherBody = otherPiece.getBody();
        let i = 0;
        let j = 0;
        let count = 0;
        while (i < 4) {
            let currentPoint = body[i];
            let j = 0;
            while (j < 4) {
                let otherPoint = otherBody[j];
                if (currentPoint.equals(otherPoint)) {
                    let count = count + 1;
                }
                let j = j + 1;
            }
            let i = i + 1;
        }

        if (count = 4) {
            return true;
        }
        return false;
    }

    function Piece createRotations(int pieceNum) {
        var Point p0;
        var Point p1;
        var Point p2;
        var Point p3;
        var Piece curentPiece;
        var Piece pieceRotation;
        var Piece piece;
        var boolean lastPieceReached;
        
        if (pieceNum = STICK) {
            let p0 = Point.new(0, 0);
            let p1 = Point.new(0, 1);
            let p2 = Point.new(0, 2);
            let p3 = Point.new(0, 3);
        }
        if (pieceNum = S1) {
            let p0 = Point.new(0, 0);
            let p1 = Point.new(1, 0);
            let p2 = Point.new(1, 1);
            let p3 = Point.new(2, 1);
        }
        if (pieceNum = S2) {
            let p0 = Point.new(0, 1);
            let p1 = Point.new(1, 1);
            let p2 = Point.new(1, 0);
            let p3 = Point.new(2, 0);
        }
        if (pieceNum = L1) {
            let p0 = Point.new(0, 0);
            let p1 = Point.new(0, 1);
            let p2 = Point.new(0, 2);
            let p3 = Point.new(1, 0);
        }
        if (pieceNum = L2) {
            let p0 = Point.new(0, 0);
            let p1 = Point.new(1, 0);
            let p2 = Point.new(1, 1);
            let p3 = Point.new(1, 2);
        }
        if (pieceNum = SQUARE) {
            let p0 = Point.new(0, 0);
            let p1 = Point.new(0, 1);
            let p2 = Point.new(1, 0);
            let p3 = Point.new(1, 1);
        }
        if (pieceNum = PYRAMID) {
            let p0 = Point.new(0, 0);
            let p1 = Point.new(1, 0);
            let p2 = Point.new(1, 1);
            let p3 = Point.new(2, 0);
        }
        
        let piece = Piece.new(p0, p1, p2, p3);

        let curentPiece = piece;
        let lastPieceReached = false;

        while (~lastPieceReached) {
            let pieceRotation = curentPiece.calculatePieceRotation();
            if (pieceRotation.equals(piece)) {
                let lastPieceReached = true;
            }
            else {
                do curentPiece.setNext(pieceRotation);
                let curentPiece = pieceRotation;
            }
        }

        return piece;
    }

    function Array getPieces() {
        var Array points;
        var Point currentPoint;
        var Piece currentPiece;

        let pieces = Array.new(7);
        
        let pieces[0] = Piece.createRotations(STICK);
        let pieces[1] = Piece.createRotations(L1);
        let pieces[2] = Piece.createRotations(L2);
        let pieces[3] = Piece.createRotations(S1);
        let pieces[4] = Piece.createRotations(S2);
        let pieces[5] = Piece.createRotations(SQUARE);
        let pieces[6] = Piece.createRotations(PYRAMID);

        return pieces;
    }

    method void initWidthHeight() {
        var int i, maxX, maxY;
        var Point bodyI;
        let maxX = 0;
        let maxY = 0;
        let i = 0;
        while (i < 4) {
            let bodyI = body[i];
            if (bodyI.getX() > maxX) {
                let maxX = bodyI.getX();
            }
            if (bodyI.getY() > maxY) {
                let maxY = bodyI.getY();
            }
            let i = i + 1;
        }
        let width = maxX + 1;
        let height = maxY + 1;
        
        return;
    }

    method void initSkirt() {
        var int i;
        var Point bodyI;
        var Array a;
        var int index;
        var int currentHeight;

        let a = Array.new(4);
        let i = 0;
        while (i < 4) {
            let a[i] = -1;
            let i = i + 1;
        }

        let i = 0;
        while (i < 4) {
            let bodyI = body[i];
            let currentHeight = bodyI.getY();
            let index = bodyI.getX();
            if (currentHeight > a[index]) {
                let a[index] = currentHeight;
            } 
            let i = i + 1;
        }
        let i  = 0;
        while (i < 4) {
            if (~(a[i] = -1)) {
                let skirt[i] = a[i];
            }
            let i = i + 1;
        }

        do a.dispose();
        
        return;
    }

    method int getWidth() {
        return width;
    }

    method int getHeight() {
        return height;
    }

    method Array getBody() {
        return body;
    }

    method Array skirt() {
        return skirt;
    }

    method Piece rotate() {
        return next;
    }

    method void setNext(Piece newNext) {
        let next = newNext;
        return;
    }
}