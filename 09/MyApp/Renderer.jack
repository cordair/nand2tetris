class Renderer {
    function void renderExtra(int x, int y) {
        var int addr;
        let addr = Renderer.calculateAddress(7 + x, y);
        do Renderer.drawExtra(addr);
        return;
    }
    
    function void renderBrick(int x, int y) {
        var int addr;
        let addr = Renderer.calculateAddress(7 + x, y);
        do Renderer.drawTetrisBrick(addr);
        return;
    }

    function void renderPanel() {
        var int i;
        var int x;
        var int y;
        var int addr;

        let i = 0;
        let x = 6;
        let y = 15;
        while (i < 20) {
            let addr = Renderer.calculateAddress(x, y);
            do Renderer.drawBottomLine(addr);
            let x = x + 1;
            let i = i + 1;
        }

        let i = 0;
        let x = 6;
        let y = 0;
        while (i < 16) {
            let addr = Renderer.calculateAddress(x, y);
            do Renderer.drawRightLine(addr);
            let y = y + 1;
            let i = i + 1;
        }

        let i = 0;
        let x = 25;
        let y = 0;
        while (i < 16) {
            let addr = Renderer.calculateAddress(x, y);
            do Renderer.drawLeftLine(addr);
            let y = y + 1;
            let i = i + 1;
        }

        return;
    }

    function int calculateAddress(int x, int y) {
        var int SPRITE_SIZE;
        let SPRITE_SIZE = 16;
        return ((y * SPRITE_SIZE) * 32) + MathUtils.mod((x * SPRITE_SIZE), 16) + ((x * SPRITE_SIZE) / 16);
    }

    function void drawBrick(int location) {
        var int memAddress;
        let memAddress = 16384+location;
        do Memory.poke(memAddress+0, -1);
        do Memory.poke(memAddress+32, -1);
        do Memory.poke(memAddress+64, -1);
        do Memory.poke(memAddress+96, -1);
        do Memory.poke(memAddress+128, -1);
        do Memory.poke(memAddress+160, -1);
        do Memory.poke(memAddress+192, -1);
        do Memory.poke(memAddress+224, -1);
        do Memory.poke(memAddress+256, -1);
        do Memory.poke(memAddress+288, -1);
        do Memory.poke(memAddress+320, -1);
        do Memory.poke(memAddress+352, -1);
        do Memory.poke(memAddress+384, -1);
        do Memory.poke(memAddress+416, -1);
        do Memory.poke(memAddress+448, -1);
        do Memory.poke(memAddress+480, -1);
        return;
    }

    function void drawTetrisBrick(int location) {
        var int memAddress;
	    let memAddress = 16384+location;
	    do Memory.poke(memAddress+0, 0);
        do Memory.poke(memAddress+32, 32766);
        do Memory.poke(memAddress+64, 32766);
        do Memory.poke(memAddress+96, 32766);
        do Memory.poke(memAddress+128, 32766);
        do Memory.poke(memAddress+160, 32766);
        do Memory.poke(memAddress+192, 32766);
        do Memory.poke(memAddress+224, 32766);
        do Memory.poke(memAddress+256, 32766);
        do Memory.poke(memAddress+288, 32766);
        do Memory.poke(memAddress+320, 32766);
        do Memory.poke(memAddress+352, 32766);
        do Memory.poke(memAddress+384, 32766);
        do Memory.poke(memAddress+416, 32766);
        do Memory.poke(memAddress+448, 32766);
        do Memory.poke(memAddress+480, 0);
        return;
    }

    function void drawLeftLine(int location) {
        var int memAddress;
        let memAddress = 16384+location;
        do Memory.poke(memAddress+0, 255);
        do Memory.poke(memAddress+32, 255);
        do Memory.poke(memAddress+64, 255);
        do Memory.poke(memAddress+96, 255);
        do Memory.poke(memAddress+128, 255);
        do Memory.poke(memAddress+160, 255);
        do Memory.poke(memAddress+192, 255);
        do Memory.poke(memAddress+224, 255);
        do Memory.poke(memAddress+256, 255);
        do Memory.poke(memAddress+288, 255);
        do Memory.poke(memAddress+320, 255);
        do Memory.poke(memAddress+352, 255);
        do Memory.poke(memAddress+384, 255);
        do Memory.poke(memAddress+416, 255);
        do Memory.poke(memAddress+448, 255);
        do Memory.poke(memAddress+480, 255);
        return;
    }

    function void drawRightLine(int location) {
        var int memAddress;
        let memAddress = 16384+location;
        do Memory.poke(memAddress+0, -256);
        do Memory.poke(memAddress+32, -256);
        do Memory.poke(memAddress+64, -256);
        do Memory.poke(memAddress+96, -256);
        do Memory.poke(memAddress+128, -256);
        do Memory.poke(memAddress+160, -256);
        do Memory.poke(memAddress+192, -256);
        do Memory.poke(memAddress+224, -256);
        do Memory.poke(memAddress+256, -256);
        do Memory.poke(memAddress+288, -256);
        do Memory.poke(memAddress+320, -256);
        do Memory.poke(memAddress+352, -256);
        do Memory.poke(memAddress+384, -256);
        do Memory.poke(memAddress+416, -256);
        do Memory.poke(memAddress+448, -256);
        do Memory.poke(memAddress+480, -256);
        return;
    }

    function void drawBottomLine(int location) {
        var int memAddress;
        let memAddress = 16384+location;
        do Memory.poke(memAddress+0, 0);
        do Memory.poke(memAddress+32, 0);
        do Memory.poke(memAddress+64, 0);
        do Memory.poke(memAddress+96, 0);
        do Memory.poke(memAddress+128, 0);
        do Memory.poke(memAddress+160, 0);
        do Memory.poke(memAddress+192, 0);
        do Memory.poke(memAddress+224, 0);
        do Memory.poke(memAddress+256, -1);
        do Memory.poke(memAddress+288, -1);
        do Memory.poke(memAddress+320, -1);
        do Memory.poke(memAddress+352, -1);
        do Memory.poke(memAddress+384, -1);
        do Memory.poke(memAddress+416, -1);
        do Memory.poke(memAddress+448, -1);
        do Memory.poke(memAddress+480, -1);
        return;
    }

    function void drawExtra(int location) {
        var int memAddress;
        let memAddress = 16384+location;
        do Memory.poke(memAddress+0, 0);
        do Memory.poke(memAddress+32, 32766);
        do Memory.poke(memAddress+64, 32766);
        do Memory.poke(memAddress+96, 32766);
        do Memory.poke(memAddress+128, 32766);
        do Memory.poke(memAddress+160, 32766);
        do Memory.poke(memAddress+192, 32766);
        do Memory.poke(memAddress+224, 32766);
        do Memory.poke(memAddress+256, 0);
        do Memory.poke(memAddress+288, 0);
        do Memory.poke(memAddress+320, 0);
        do Memory.poke(memAddress+352, 0);
        do Memory.poke(memAddress+384, 0);
        do Memory.poke(memAddress+416, 0);
        do Memory.poke(memAddress+448, 0);
        do Memory.poke(memAddress+480, 0);
        return;
    }

    function void main() {
        do Renderer.renderPanel();
        do Renderer.renderBrick(0, 15);
        do Renderer.renderExtra(0, 15);
        return;
    }
}