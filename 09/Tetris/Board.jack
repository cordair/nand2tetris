class Board {
    field int WIDTH;
    field int HEIGHT;
    field boolean committed;

    static field int PLACE_OK           = 0;
    static field int PLACE_ROW_FILLED   = 1;
    static field int PLACE_OUT_BOUNDS   = 2;
    static field int PLACE_BAD          = 2;
    static field Matrix board;

    constructor Board new(int width, int height) {
        let WIDTH = width;
        let HEIGHT = height;
        let board = Matrix.new(WIDTH, HEIGHT);
        let committed = false;
        return this;
    }

    method void dispose() {
        do board.dispose();
        do Memory.deAlloc(this);
    }

    method int placePiece(Piece piece, int x, int y) {
        if (committed) {
            do Output.printString("Board commit error!");
        }

        return FAILED;
    }

    method int clearRows() {
        return 1;
    }

    method void undo() {
        let committed = false;
        return;
    }

    method void commit() {
        let committed = true;
        return;
    }

    method int getHeight() {
        return 1;
    }

    method int getWidth() {
        return 1;
    }
}