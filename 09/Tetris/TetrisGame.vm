function TetrisGame.new 0
push constant 20
call Memory.alloc 1
pop pointer 0
push constant 7
pop static 1
push constant 0
pop static 2
push constant 1
pop static 3
push constant 2
pop static 4
push constant 3
pop static 5
push constant 4
pop static 6
push constant 1
neg
pop static 7
push constant 20
pop this 9
push constant 16
pop this 10
push constant 5
pop static 0
push constant 1000
pop static 8
push constant 1
neg
pop this 14
push constant 0
pop this 16
push constant 0
pop this 17
push constant 0
pop this 18
push constant 0
pop this 19
push this 9
push this 10
push static 0
call Board.new 3
pop this 1
call Piece.getPieces 0
pop this 0
push pointer 0
return
function TetrisGame.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function TetrisGame.start 4
push argument 0
pop pointer 0
push constant 0
not
pop this 12
push constant 0
pop this 15
push pointer 0
call TetrisGame.pickNextPiece 1
pop temp 0
push pointer 0
call TetrisGame.addNewPiece 1
pop temp 0
push pointer 0
call TetrisGame.pickNextPiece 1
pop temp 0
call Renderer.renderPanel 0
pop temp 0
label WHILE_EXP0
push this 12
not
if-goto WHILE_END0
push static 7
pop this 14
push constant 0
pop this 15
call Keyboard.keyPressed 0
pop local 2
push this 18
push constant 1
add
pop this 18
push this 17
push constant 1
add
pop this 17
push this 17
push static 8
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 2
call TetrisGame.move 2
pop temp 0
push constant 0
pop this 17
label IF_FALSE0
push this 18
push static 8
push constant 6
call Math.multiply 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 15
push static 6
pop this 14
push constant 0
pop this 18
label IF_FALSE1
push this 14
push static 7
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
push constant 0
eq
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 1
call Board.undo 1
pop temp 0
label IF_FALSE3
push pointer 0
call TetrisGame.computeNextMove 1
pop temp 0
push pointer 0
call TetrisGame.setCurrent 1
pop local 0
push local 0
call Board.PLACE_ROW_FILLED 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 16
not
pop this 16
label IF_FALSE4
push constant 0
pop local 3
push local 0
call Board.PLACE_OUT_BOUNDS 0
push constant 1
sub
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
pop local 3
label IF_FALSE5
push local 3
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 2
push constant 0
eq
not
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 1
push this 2
push this 5
push this 6
call Board.placePiece 4
pop temp 0
push pointer 0
push this 2
push this 5
push this 6
push constant 0
not
call TetrisGame.paintPiece 5
pop temp 0
label IF_FALSE7
label IF_FALSE6
push local 3
push this 14
push static 6
eq
and
push this 15
not
and
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 16
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 1
call Board.clearRows 1
pop local 1
push this 11
push local 1
push constant 10
call Math.multiply 2
add
pop this 11
push pointer 0
call TetrisGame.paint 1
pop temp 0
push this 16
not
pop this 16
label IF_FALSE9
push this 1
call Board.getMaxHeight 1
push this 10
push static 0
sub
gt
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 0
pop this 12
goto IF_END10
label IF_FALSE10
push pointer 0
call TetrisGame.addNewPiece 1
pop temp 0
push pointer 0
call TetrisGame.pickNextPiece 1
pop temp 0
label IF_END10
label IF_FALSE8
label IF_FALSE2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function TetrisGame.computeNextMove 0
push argument 0
pop pointer 0
push this 5
pop this 7
push this 6
pop this 8
push this 2
pop this 3
push this 14
push static 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
call Piece.rotate 1
pop this 3
push this 7
push this 2
call Piece.getWidth 1
push this 3
call Piece.getWidth 1
sub
push constant 2
call Math.divide 2
add
pop this 7
push this 8
push this 2
call Piece.getHeight 1
push this 3
call Piece.getHeight 1
sub
push constant 2
call Math.divide 2
add
pop this 8
label IF_FALSE0
push this 14
push static 5
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
push this 2
push this 7
call Board.dropHeight 3
pop this 8
push this 8
push this 6
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 6
pop this 8
label IF_FALSE2
label IF_FALSE1
push this 14
push static 6
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 6
push constant 1
add
pop this 8
label IF_FALSE3
push this 14
push static 3
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 5
push constant 1
sub
pop this 7
label IF_FALSE4
push this 14
push static 4
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 5
push constant 1
add
pop this 7
label IF_FALSE5
push constant 0
return
function TetrisGame.setCurrent 1
push argument 0
pop pointer 0
push this 1
push this 3
push this 7
push this 8
call Board.placePiece 4
pop local 0
push local 0
call Board.PLACE_OUT_BOUNDS 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 2
push this 5
push this 6
push constant 0
call TetrisGame.paintPiece 5
pop temp 0
push this 3
pop this 2
push this 7
pop this 5
push this 8
pop this 6
push pointer 0
push this 2
push this 5
push this 6
push constant 0
not
call TetrisGame.paintPiece 5
pop temp 0
goto IF_END0
label IF_FALSE0
push this 1
call Board.undo 1
pop temp 0
label IF_END0
push local 0
return
function TetrisGame.addNewPiece 1
push argument 0
pop pointer 0
push this 1
call Board.commit 1
pop temp 0
push this 4
pop this 2
call Board.WIDTH 0
push this 2
call Piece.getWidth 1
sub
push constant 2
call Math.divide 2
pop this 5
push static 0
push constant 4
sub
pop this 6
push this 1
push this 2
push this 5
push this 6
call Board.placePiece 4
pop local 0
push pointer 0
push this 2
push this 5
push this 6
push constant 0
not
call TetrisGame.paintPiece 5
pop temp 0
push constant 0
return
function TetrisGame.move 0
push argument 0
pop pointer 0
push argument 1
push constant 140
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 12
label IF_FALSE0
push argument 1
push constant 128
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 13
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop this 13
goto IF_END2
label IF_FALSE2
push constant 0
pop this 13
label IF_END2
label IF_FALSE1
push argument 1
push constant 32
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop this 15
push static 5
pop this 14
label IF_FALSE3
push argument 1
push constant 131
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
pop this 15
push static 2
pop this 14
label IF_FALSE4
push argument 1
push constant 133
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
pop this 15
push static 6
pop this 14
label IF_FALSE5
push argument 1
push constant 130
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
pop this 15
push static 3
pop this 14
label IF_FALSE6
push argument 1
push constant 132
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
not
pop this 15
push static 4
pop this 14
label IF_FALSE7
push constant 0
return
function TetrisGame.pickNextPiece 1
push argument 0
pop pointer 0
push this 4
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 4
push this 9
push constant 2
add
push this 10
push constant 2
call Math.divide 2
push constant 2
sub
push constant 0
call TetrisGame.paintPiece 5
pop temp 0
label IF_FALSE0
push static 1
push constant 1
sub
call Random.randRange 1
pop local 0
push local 0
push this 0
add
pop pointer 1
push that 0
pop this 4
push pointer 0
push this 4
push this 9
push constant 2
add
push this 10
push constant 2
call Math.divide 2
push constant 2
sub
push constant 0
not
call TetrisGame.paintPiece 5
pop temp 0
push constant 0
return
function TetrisGame.paintPanel 0
push argument 0
pop pointer 0
call Renderer.renderPanel 0
pop temp 0
push constant 0
return
function TetrisGame.paintPiece 5
push argument 0
pop pointer 0
push argument 1
call Piece.getBody 1
pop local 0
push constant 0
pop local 4
label WHILE_EXP0
push local 4
push constant 4
lt
not
if-goto WHILE_END0
push local 4
push local 0
add
pop pointer 1
push that 0
pop local 1
push argument 2
push local 1
call Point.getX 1
add
pop local 2
push argument 3
push local 1
call Point.getY 1
add
pop local 3
push local 2
push local 3
push argument 4
call Renderer.renderBrick 3
pop temp 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function TetrisGame.paint 5
push argument 0
pop pointer 0
push this 1
call Board.getBoard 1
pop local 0
label WHILE_EXP0
push local 4
call Board.HEIGHT 0
lt
not
if-goto WHILE_END0
push constant 0
pop local 3
push local 0
push local 4
call Matrix.getRow 2
pop local 1
label WHILE_EXP1
push local 3
call Board.WIDTH 0
lt
not
if-goto WHILE_END1
push local 3
push local 1
add
pop pointer 1
push that 0
pop local 2
push local 3
push local 4
push local 2
call Renderer.renderBrick 3
pop temp 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
